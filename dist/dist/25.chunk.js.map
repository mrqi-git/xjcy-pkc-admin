{"version":3,"sources":["webpack:///./src/views/component-group/message/message.vue?5ed4","webpack:///src/views/component-group/message/message.vue","webpack:///./src/views/component-group/message/message.vue?fd72","webpack:///./src/views/component-group/message/message.vue?9bf1","webpack:///./src/views/component-group/message/message.vue"],"names":["render","_vm","_h","$createElement","_c","_self","staticClass","attrs","size","long","type","on","click","$event","setCurrentMesType","name","directives","rawName","value","currentMessageType","expression","_v","count","unreadCount","hasreadCount","recyclebinCount","showMesTitleList","ref","columns","mesTitleColumns","data","currentMesList","noDataText","_e","backMesTitleList","_s","mes","title","time","content","staticRenderFns","_withStripped","esExports","module","hot","accept","require","rerender"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA,yBAA0L;AAC1L;AACA;AACA;AACA;AACA;AACA;AAC2L;AAC3L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;;;;;;;;;;;;;;UCJA;;AACA;;8DACA;;;0BAIA;AAFA;;4CAIA;kGACA;mFACA;AAEA;AALA;AAJA,eAUA;AACA;4DACA;;;0BAGA;0BAEA;AAHA;;4CAKA;kGACA;AAEA;AAJA;AALA,eAUA;AACA;wDACA;;;0BAIA;AAFA;;4CAIA;kGACA;AAEA;AAJA;AAJA,eASA;AACA;;4BAEA;2BACA;4BACA;4BACA;gCACA;8BACA;yBACA;0BACA;6BACA;wBACA;;uBAEA;sBACA;yBAEA;AAJA;;uBAYA;qBACA;uBACA;0BACA;mDACA;;;oDAGA;yDACA;6DACA;6EACA;wDACA;AAEA;AAPA;AADA,kCASA;AAEA;AAjBA,aADA;uBAoBA;qBACA;uBACA;uBACA;mDACA;;;kCAIA;kCAEA;AAHA;;oCAOA;AAHA;AALA,sBADA;;kCAYA;kCAEA;AAHA;AADA,mDAMA;AAEA;AAxBA;uBA0BA;qBACA;uBACA;uBACA;mDACA;+DACA;wCACA,kBAEA;uEACA;wCACA,iBAEA;2BACA;wCACA,eAEA;AACA;AAIA;AAtBA;AAjEA;AAwFA;;;8CAEA;gCACA;4BACA;0CACA;2BACA;4BACA;8BACA;8BACA;uFACA;AACA;sDACA;oCACA;AACA;4DACA;kDACA;wCACA;AACA;sCACA;mCACA;kCACA;2CACA;2CACA;kCACA;2CACA;mBACA;kCACA;2CACA;AACA;AACA;+CAEA;6BACA;8CACA;;gFACA;;sFACA;;oFACA;;8DACA;;4DAEA;;+BACA;AAEA;AA1CA;gCA2CA;;mBAGA;kBAEA;AAHA,SADA;mBAMA;kBAEA;AAHA;mBAKA;kBAGA;AAJA;;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","file":"25.chunk.js","sourcesContent":["var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5792e681\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./message.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./message.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./message.vue\"\n/* template */\nimport __vue_template__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5792e681\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./message.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\views\\\\component-group\\\\message\\\\message.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-5792e681\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-5792e681\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/component-group/message/message.vue\n// module id = 251\n// module chunks = 25","<style lang=\"less\">\r\n    @import './message.less';\r\n</style>\r\n\r\n<template>\r\n    <div class=\"message-main-con\">\r\n        <div class=\"message-mainlist-con\">\r\n            <div>\r\n                <Button @click=\"setCurrentMesType('unread')\" size=\"large\" long type=\"text\"><transition name=\"mes-current-type-btn\"><Icon v-show=\"currentMessageType === 'unread'\" type=\"checkmark\"></Icon></transition><span class=\"mes-type-btn-text\">未读消息</span><Badge class=\"message-count-badge-outer\" class-name=\"message-count-badge\" :count=\"unreadCount\"></Badge></Button>\r\n            </div>\r\n            <div>\r\n                <Button @click=\"setCurrentMesType('hasread')\" size=\"large\" long type=\"text\"><transition name=\"mes-current-type-btn\"><Icon v-show=\"currentMessageType === 'hasread'\" type=\"checkmark\"></Icon></transition><span class=\"mes-type-btn-text\">已读消息</span><Badge class=\"message-count-badge-outer\" class-name=\"message-count-badge\" :count=\"hasreadCount\"></Badge></Button>\r\n            </div>\r\n            <div>\r\n                <Button @click=\"setCurrentMesType('recyclebin')\" size=\"large\" long type=\"text\"><transition name=\"mes-current-type-btn\"><Icon v-show=\"currentMessageType === 'recyclebin'\" type=\"checkmark\"></Icon></transition><span class=\"mes-type-btn-text\">回收站</span><Badge class=\"message-count-badge-outer\" class-name=\"message-count-badge\" :count=\"recyclebinCount\"></Badge></Button>\r\n            </div>\r\n        </div>\r\n        <div class=\"message-content-con\">\r\n            <transition name=\"view-message\">\r\n                <div v-if=\"showMesTitleList\" class=\"message-title-list-con\">\r\n                    <Table ref=\"messageList\" :columns=\"mesTitleColumns\" :data=\"currentMesList\" :no-data-text=\"noDataText\"></Table>\r\n                </div>\r\n            </transition>\r\n            <transition name=\"back-message-list\">\r\n                <div v-if=\"!showMesTitleList\" class=\"message-view-content-con\">\r\n                    <div class=\"message-content-top-bar\">\r\n                        <span class=\"mes-back-btn-con\"><Button type=\"text\" @click=\"backMesTitleList\"><Icon type=\"chevron-left\"></Icon>&nbsp;&nbsp;返回</Button></span>\r\n                        <h3 class=\"mes-title\">{{ mes.title }}</h3>\r\n                    </div>\r\n                    <p class=\"mes-time-con\"><Icon type=\"android-time\"></Icon>&nbsp;&nbsp;{{ mes.time }}</p>\r\n                    <div class=\"message-content-body\">\r\n                        <p class=\"message-content\">{{ mes.content }}</p>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'message_index',\r\n    data () {\r\n        const markAsreadBtn = (h, params) => {\r\n            return h('Button', {\r\n                props: {\r\n                    size: 'small'\r\n                },\r\n                on: {\r\n                    click: () => {\r\n                        this.hasreadMesList.unshift(this.currentMesList.splice(params.index, 1)[0]);\r\n                        this.$store.commit('setMessageCount', this.unreadMesList.length);\r\n                    }\r\n                }\r\n            }, '标为已读');\r\n        };\r\n        const deleteMesBtn = (h, params) => {\r\n            return h('Button', {\r\n                props: {\r\n                    size: 'small',\r\n                    type: 'error'\r\n                },\r\n                on: {\r\n                    click: () => {\r\n                        this.recyclebinList.unshift(this.hasreadMesList.splice(params.index, 1)[0]);\r\n                    }\r\n                }\r\n            }, '删除');\r\n        };\r\n        const restoreBtn = (h, params) => {\r\n            return h('Button', {\r\n                props: {\r\n                    size: 'small'\r\n                },\r\n                on: {\r\n                    click: () => {\r\n                        this.hasreadMesList.unshift(this.recyclebinList.splice(params.index, 1)[0]);\r\n                    }\r\n                }\r\n            }, '还原');\r\n        };\r\n        return {\r\n            currentMesList: [],\r\n            unreadMesList: [],\r\n            hasreadMesList: [],\r\n            recyclebinList: [],\r\n            currentMessageType: 'unread',\r\n            showMesTitleList: true,\r\n            unreadCount: 0,\r\n            hasreadCount: 0,\r\n            recyclebinCount: 0,\r\n            noDataText: '暂无未读消息',\r\n            mes: {\r\n                title: '',\r\n                time: '',\r\n                content: ''\r\n            },\r\n            mesTitleColumns: [\r\n                // {\r\n                //     type: 'selection',\r\n                //     width: 50,\r\n                //     align: 'center'\r\n                // },\r\n                {\r\n                    title: ' ',\r\n                    key: 'title',\r\n                    align: 'left',\r\n                    ellipsis: true,\r\n                    render: (h, params) => {\r\n                        return h('a', {\r\n                            on: {\r\n                                click: () => {\r\n                                    this.showMesTitleList = false;\r\n                                    this.mes.title = params.row.title;\r\n                                    this.mes.time = this.formatDate(params.row.time);\r\n                                    this.getContent(params.index);\r\n                                }\r\n                            }\r\n                        }, params.row.title);\r\n                    }\r\n                },\r\n                {\r\n                    title: ' ',\r\n                    key: 'time',\r\n                    align: 'center',\r\n                    width: 180,\r\n                    render: (h, params) => {\r\n                        return h('span', [\r\n                            h('Icon', {\r\n                                props: {\r\n                                    type: 'android-time',\r\n                                    size: 12\r\n                                },\r\n                                style: {\r\n                                    margin: '0 5px'\r\n                                }\r\n                            }),\r\n                            h('span', {\r\n                                props: {\r\n                                    type: 'android-time',\r\n                                    size: 12\r\n                                }\r\n                            }, this.formatDate(params.row.time))\r\n                        ]);\r\n                    }\r\n                },\r\n                {\r\n                    title: ' ',\r\n                    key: 'asread',\r\n                    align: 'center',\r\n                    width: 100,\r\n                    render: (h, params) => {\r\n                        if (this.currentMessageType === 'unread') {\r\n                            return h('div', [\r\n                                markAsreadBtn(h, params)\r\n                            ]);\r\n                        } else if (this.currentMessageType === 'hasread') {\r\n                            return h('div', [\r\n                                deleteMesBtn(h, params)\r\n                            ]);\r\n                        } else {\r\n                            return h('div', [\r\n                                restoreBtn(h, params)\r\n                            ]);\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    },\r\n    methods: {\r\n        formatDate (time) {\r\n            let date = new Date(time);\r\n            let year = date.getFullYear();\r\n            let month = date.getMonth() + 1;\r\n            let day = date.getDate();\r\n            let hour = date.getHours();\r\n            let minute = date.getMinutes();\r\n            let second = date.getSeconds();\r\n            return year + '/' + month + '/' + day + '  ' + hour + ':' + minute + ':' + second;\r\n        },\r\n        backMesTitleList () {\r\n            this.showMesTitleList = true;\r\n        },\r\n        setCurrentMesType (type) {\r\n            if (this.currentMessageType !== type) {\r\n                this.showMesTitleList = true;\r\n            }\r\n            this.currentMessageType = type;\r\n            if (type === 'unread') {\r\n                this.noDataText = '暂无未读消息';\r\n                this.currentMesList = this.unreadMesList;\r\n            } else if (type === 'hasread') {\r\n                this.noDataText = '暂无已读消息';\r\n                this.currentMesList = this.hasreadMesList;\r\n            } else {\r\n                this.noDataText = '回收站无消息';\r\n                this.currentMesList = this.recyclebinList;\r\n            }\r\n        },\r\n        getContent (index) {\r\n            // you can write ajax request here to get message content\r\n            let mesContent = '';\r\n            switch (this.currentMessageType + index) {\r\n                case 'unread0': mesContent = '这是您点击的《欢迎登录iView-admin后台管理系统，来了解他的用途吧》的相关内容。'; break;\r\n                case 'unread1': mesContent = '这是您点击的《使用iView-admin和iView-ui组件库快速搭建你的后台系统吧》的相关内容。'; break;\r\n                case 'unread2': mesContent = '这是您点击的《喜欢iView-admin的话，欢迎到github主页给个star吧》的相关内容。'; break;\r\n                case 'hasread0': mesContent = '这是您点击的《这是一条您已经读过的消息》的相关内容。'; break;\r\n                default: mesContent = '这是您点击的《这是一条被删除的消息》的相关内容。'; break;\r\n            }\r\n            this.mes.content = mesContent;\r\n        }\r\n    },\r\n    mounted () {\r\n        this.currentMesList = this.unreadMesList = [\r\n            {\r\n                title: '欢迎登录iView-admin后台管理系统，来了解他的用途吧',\r\n                time: 1507390106000\r\n            },\r\n            {\r\n                title: '使用iView-admin和iView-ui组件库快速搭建你的后台系统吧',\r\n                time: 1507390106000\r\n            },\r\n            {\r\n                title: '喜欢iView-admin的话，欢迎到github主页给个star吧',\r\n                time: 1507390106000\r\n            }\r\n        ];\r\n        this.hasreadMesList = [\r\n            {\r\n                title: '这是一条您已经读过的消息',\r\n                time: 1507330106000\r\n            }\r\n        ];\r\n        this.recyclebinList = [\r\n            {\r\n                title: '这是一条被删除的消息',\r\n                time: 1506390106000\r\n            }\r\n        ];\r\n        this.unreadCount = this.unreadMesList.length;\r\n        this.hasreadCount = this.hasreadMesList.length;\r\n        this.recyclebinCount = this.recyclebinList.length;\r\n    },\r\n    watch: {\r\n        unreadMesList (arr) {\r\n            this.unreadCount = arr.length;\r\n        },\r\n        hasreadMesList (arr) {\r\n            this.hasreadCount = arr.length;\r\n        },\r\n        recyclebinList (arr) {\r\n            this.recyclebinCount = arr.length;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/component-group/message/message.vue","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5792e681\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/less-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./message.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"363a41d3\", content, false);\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5792e681\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/less-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./message.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5792e681\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/less-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./message.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5792e681\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/component-group/message/message.vue\n// module id = 948\n// module chunks = 25","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.message-main-con {\\n  position: absolute;\\n  left: 0px;\\n  top: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n}\\n.message-mainlist-con {\\n  position: absolute;\\n  left: 0;\\n  top: 10px;\\n  width: 300px;\\n  bottom: 0;\\n  padding: 10px 0;\\n}\\n.message-mainlist-con div {\\n  padding: 10px;\\n  margin: 0 20px;\\n  border-bottom: 1px dashed #d2d3d2;\\n}\\n.message-mainlist-con div:last-child {\\n  border: none;\\n}\\n.message-mainlist-con div .message-count-badge-outer {\\n  float: right;\\n}\\n.message-mainlist-con div .message-count-badge {\\n  background: #d2d3d2;\\n}\\n.message-mainlist-con div:first-child .message-count-badge {\\n  background: #ed3f14;\\n}\\n.message-mainlist-con div .mes-type-btn-text {\\n  margin-left: 10px;\\n}\\n.message-content-con {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  bottom: 10px;\\n  left: 300px;\\n  background: white;\\n  border-radius: 3px;\\n  box-shadow: 2px 2px 10px 2px rgba(0, 0, 0, 0.1);\\n  overflow: auto;\\n}\\n.message-content-con .message-title-list-con {\\n  width: 100%;\\n  height: 100%;\\n}\\n.message-content-con .message-content-top-bar {\\n  height: 40px;\\n  width: 100%;\\n  background: white;\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  border-bottom: 1px solid #dededb;\\n}\\n.message-content-con .message-content-top-bar .mes-back-btn-con {\\n  position: absolute;\\n  width: 70px;\\n  height: 30px;\\n  left: 0;\\n  top: 5px;\\n}\\n.message-content-con .message-content-top-bar .mes-title {\\n  position: absolute;\\n  top: 0;\\n  right: 70px;\\n  bottom: 0;\\n  left: 70px;\\n  line-height: 40px;\\n  padding: 0 30px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  text-align: center;\\n}\\n.message-content-con .mes-time-con {\\n  position: absolute;\\n  width: 100%;\\n  top: 40px;\\n  left: 0;\\n  padding: 20px 0;\\n  text-align: center;\\n  font-size: 14px;\\n  color: #b7b7b5;\\n}\\n.message-content-con .message-content-body {\\n  position: absolute;\\n  top: 90px;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  overflow: auto;\\n}\\n.message-content-con .message-content-body .message-content {\\n  padding: 10px 20px;\\n}\\n.back-message-list-enter,\\n.back-message-list-leave-to {\\n  opacity: 0;\\n}\\n.back-message-list-enter-active,\\n.back-message-list-leave-active {\\n  transition: all .5s;\\n}\\n.back-message-list-enter-to,\\n.back-message-list-leave {\\n  opacity: 1;\\n}\\n.view-message-enter,\\n.view-message-leave-to {\\n  opacity: 0;\\n}\\n.view-message-enter-active,\\n.view-message-leave-active {\\n  transition: all .5s;\\n}\\n.view-message-enter-to,\\n.view-message-leave {\\n  opacity: 1;\\n}\\n.mes-current-type-btn-enter,\\n.mes-current-type-btn-leave-to {\\n  opacity: 0;\\n  width: 0;\\n}\\n.mes-current-type-btn-enter-active,\\n.mes-current-type-btn-leave-active {\\n  transition: all .3s;\\n}\\n.mes-current-type-btn-enter-to,\\n.mes-current-type-btn-leave {\\n  opacity: 1;\\n  width: 12px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5792e681\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/views/component-group/message/message.vue\n// module id = 949\n// module chunks = 25","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"message-main-con\" }, [\n    _c(\"div\", { staticClass: \"message-mainlist-con\" }, [\n      _c(\n        \"div\",\n        [\n          _c(\n            \"Button\",\n            {\n              attrs: { size: \"large\", long: \"\", type: \"text\" },\n              on: {\n                click: function($event) {\n                  _vm.setCurrentMesType(\"unread\")\n                }\n              }\n            },\n            [\n              _c(\n                \"transition\",\n                { attrs: { name: \"mes-current-type-btn\" } },\n                [\n                  _c(\"Icon\", {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.currentMessageType === \"unread\",\n                        expression: \"currentMessageType === 'unread'\"\n                      }\n                    ],\n                    attrs: { type: \"checkmark\" }\n                  })\n                ],\n                1\n              ),\n              _c(\"span\", { staticClass: \"mes-type-btn-text\" }, [\n                _vm._v(\"未读消息\")\n              ]),\n              _c(\"Badge\", {\n                staticClass: \"message-count-badge-outer\",\n                attrs: {\n                  \"class-name\": \"message-count-badge\",\n                  count: _vm.unreadCount\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        [\n          _c(\n            \"Button\",\n            {\n              attrs: { size: \"large\", long: \"\", type: \"text\" },\n              on: {\n                click: function($event) {\n                  _vm.setCurrentMesType(\"hasread\")\n                }\n              }\n            },\n            [\n              _c(\n                \"transition\",\n                { attrs: { name: \"mes-current-type-btn\" } },\n                [\n                  _c(\"Icon\", {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.currentMessageType === \"hasread\",\n                        expression: \"currentMessageType === 'hasread'\"\n                      }\n                    ],\n                    attrs: { type: \"checkmark\" }\n                  })\n                ],\n                1\n              ),\n              _c(\"span\", { staticClass: \"mes-type-btn-text\" }, [\n                _vm._v(\"已读消息\")\n              ]),\n              _c(\"Badge\", {\n                staticClass: \"message-count-badge-outer\",\n                attrs: {\n                  \"class-name\": \"message-count-badge\",\n                  count: _vm.hasreadCount\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        [\n          _c(\n            \"Button\",\n            {\n              attrs: { size: \"large\", long: \"\", type: \"text\" },\n              on: {\n                click: function($event) {\n                  _vm.setCurrentMesType(\"recyclebin\")\n                }\n              }\n            },\n            [\n              _c(\n                \"transition\",\n                { attrs: { name: \"mes-current-type-btn\" } },\n                [\n                  _c(\"Icon\", {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.currentMessageType === \"recyclebin\",\n                        expression: \"currentMessageType === 'recyclebin'\"\n                      }\n                    ],\n                    attrs: { type: \"checkmark\" }\n                  })\n                ],\n                1\n              ),\n              _c(\"span\", { staticClass: \"mes-type-btn-text\" }, [\n                _vm._v(\"回收站\")\n              ]),\n              _c(\"Badge\", {\n                staticClass: \"message-count-badge-outer\",\n                attrs: {\n                  \"class-name\": \"message-count-badge\",\n                  count: _vm.recyclebinCount\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      { staticClass: \"message-content-con\" },\n      [\n        _c(\"transition\", { attrs: { name: \"view-message\" } }, [\n          _vm.showMesTitleList\n            ? _c(\n                \"div\",\n                { staticClass: \"message-title-list-con\" },\n                [\n                  _c(\"Table\", {\n                    ref: \"messageList\",\n                    attrs: {\n                      columns: _vm.mesTitleColumns,\n                      data: _vm.currentMesList,\n                      \"no-data-text\": _vm.noDataText\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e()\n        ]),\n        _vm._v(\" \"),\n        _c(\"transition\", { attrs: { name: \"back-message-list\" } }, [\n          !_vm.showMesTitleList\n            ? _c(\"div\", { staticClass: \"message-view-content-con\" }, [\n                _c(\"div\", { staticClass: \"message-content-top-bar\" }, [\n                  _c(\n                    \"span\",\n                    { staticClass: \"mes-back-btn-con\" },\n                    [\n                      _c(\n                        \"Button\",\n                        {\n                          attrs: { type: \"text\" },\n                          on: { click: _vm.backMesTitleList }\n                        },\n                        [\n                          _c(\"Icon\", { attrs: { type: \"chevron-left\" } }),\n                          _vm._v(\"  返回\")\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"h3\", { staticClass: \"mes-title\" }, [\n                    _vm._v(_vm._s(_vm.mes.title))\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"p\",\n                  { staticClass: \"mes-time-con\" },\n                  [\n                    _c(\"Icon\", { attrs: { type: \"android-time\" } }),\n                    _vm._v(\"  \" + _vm._s(_vm.mes.time))\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"message-content-body\" }, [\n                  _c(\"p\", { staticClass: \"message-content\" }, [\n                    _vm._v(_vm._s(_vm.mes.content))\n                  ])\n                ])\n              ])\n            : _vm._e()\n        ])\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-5792e681\", esExports)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/views/component-group/message/message.vue"],"sourceRoot":""}